# This is a basic workflow that is manually triggered

name: Build Service

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  BuildPackage:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx        
      uses: docker/setup-buildx-action@v1     
           
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-compat-${{ hashFiles('**/system-images/compat/Cargo.lock') }}
        
    - name: Install packages
      run: |
           sudo snap install yq
           sudo apt-get install -y build-essential openssl libssl-dev libc6-dev clang libclang-dev ca-certificates
           
    - name: do cargo stuff
      id: cargo-stuff
      if: steps.cache.outputs.cache-hit != 'true'
      run: cargo install toml-cli
           
    - name: install package manager stuff
      run: |
           cd ~/ && git clone https://github.com/Start9Labs/embassy-os.git;
           cd embassy-os;
           git submodule update --init
           cd patch-db;
           git submodule update --init;
           cd ../
           cd backend;
           ./install-sdk.sh;

    - name: build the service package!
      run: |
           cd ~/ && git clone https://github.com/Start9Labs/synapse-wrapper.git
           cd synapse-wrapper
           git submodule update --init
           embassy-sdk init
           make

           


        
        
        
